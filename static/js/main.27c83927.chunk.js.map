{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","description","imdbUrl","isImage","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovies","useState","searchTitle","setSearchTitle","setMovie","isError","setIsError","isLoading","setIsLoading","changeMovie","inputValue","a","query","fetch","then","res","json","catch","Response","Error","newMovie","Title","Plot","Poster","imdbID","useEffect","htmlFor","name","type","id","placeholder","value","onChange","event","target","disabled","trim","length","classNames","onClick","e","preventDefault","titleEdited","toLowerCase","undefined","App","setMovies","some","elem","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c83927.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbUrl,\n  } = movie;\n\n  const isImage = (imgUrl !== 'N/A');\n  const posterDef = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={isImage ? imgUrl : posterDef}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovies: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovies }) => {\n  const [searchTitle, setSearchTitle] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const changeMovie = async (inputValue: string) => {\n    setIsLoading(true);\n\n    try {\n      const newMovie = await getMovie(inputValue);\n\n      if ('Error' in newMovie) {\n        setIsError(true);\n      } else {\n        setIsError(false);\n        const {\n          Title,\n          Plot,\n          Poster,\n          imdbID,\n        } = newMovie;\n\n        const imdbUrl = `https://www.imdb.com/title/${imdbID}`;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl,\n          imdbId: imdbID,\n        });\n      }\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsError(false);\n  }, [searchTitle]);\n\n  const sendQuery = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    const titleEdited = searchTitle.trim().toLowerCase();\n\n    changeMovie(titleEdited);\n  };\n\n  const clearSideBar = () => {\n    setIsError(false);\n    setSearchTitle('');\n    setMovie(undefined);\n  };\n\n  const addToList = () => {\n    if (movie) {\n      addMovies(movie);\n    }\n\n    clearSideBar();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              name=\"input\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchTitle}\n              onChange={(event) => {\n                setSearchTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!searchTitle.trim().length || false}\n              className={\n                classNames(\n                  'button is-light',\n                  { 'is-loading': isLoading },\n                )\n              }\n              onClick={sendQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          { movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      { movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d9e15660';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const pushMovie = (movie: Movie) => {\n    if (movies.length > 0) {\n      const isMoviePresent = movies\n        .some((elem) => elem.imdbId === movie.imdbId);\n\n      return (isMoviePresent\n        ? null\n        : setMovies((item) => [...item, movie])\n      );\n    }\n\n    return setMovies((item) => [...item, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovies={pushMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}